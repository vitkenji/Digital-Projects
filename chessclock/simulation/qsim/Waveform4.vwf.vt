// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "02/03/2025 15:17:21"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          project
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module project_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
reg RESET;
reg SWITCH;
// wires                                               
wire H00;
wire H01;
wire H02;
wire H03;
wire H04;
wire H05;
wire H06;
wire H10;
wire H11;
wire H12;
wire H13;
wire H14;
wire H15;
wire H16;
wire H20;
wire H21;
wire H22;
wire H23;
wire H24;
wire H25;
wire H26;
wire H30;
wire H31;
wire H32;
wire H33;
wire H34;
wire H35;
wire H36;
wire H40;
wire H41;
wire H42;
wire H43;
wire H44;
wire H45;
wire H46;
wire H50;
wire H51;
wire H52;
wire H53;
wire H54;
wire H55;
wire H56;
wire p0c0;
wire p0c1;
wire p0c2;
wire p0c3;
wire p0d0;
wire p0d1;
wire p0d2;
wire p0u0;
wire p0u1;
wire p0u2;
wire p0u3;
wire p1c0;
wire p1c1;
wire p1c2;
wire p1c3;
wire p1d0;
wire p1d1;
wire p1d2;
wire p1u0;
wire p1u1;
wire p1u2;
wire p1u3;

// assign statements (if any)                          
project i1 (
// port map - connection between master ports and signals/registers   
	.CLK(CLK),
	.H00(H00),
	.H01(H01),
	.H02(H02),
	.H03(H03),
	.H04(H04),
	.H05(H05),
	.H06(H06),
	.H10(H10),
	.H11(H11),
	.H12(H12),
	.H13(H13),
	.H14(H14),
	.H15(H15),
	.H16(H16),
	.H20(H20),
	.H21(H21),
	.H22(H22),
	.H23(H23),
	.H24(H24),
	.H25(H25),
	.H26(H26),
	.H30(H30),
	.H31(H31),
	.H32(H32),
	.H33(H33),
	.H34(H34),
	.H35(H35),
	.H36(H36),
	.H40(H40),
	.H41(H41),
	.H42(H42),
	.H43(H43),
	.H44(H44),
	.H45(H45),
	.H46(H46),
	.H50(H50),
	.H51(H51),
	.H52(H52),
	.H53(H53),
	.H54(H54),
	.H55(H55),
	.H56(H56),
	.p0c0(p0c0),
	.p0c1(p0c1),
	.p0c2(p0c2),
	.p0c3(p0c3),
	.p0d0(p0d0),
	.p0d1(p0d1),
	.p0d2(p0d2),
	.p0u0(p0u0),
	.p0u1(p0u1),
	.p0u2(p0u2),
	.p0u3(p0u3),
	.p1c0(p1c0),
	.p1c1(p1c1),
	.p1c2(p1c2),
	.p1c3(p1c3),
	.p1d0(p1d0),
	.p1d1(p1d1),
	.p1d2(p1d2),
	.p1u0(p1u0),
	.p1u1(p1u1),
	.p1u2(p1u2),
	.p1u3(p1u3),
	.RESET(RESET),
	.SWITCH(SWITCH)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
initial
begin
	repeat(55)
	begin
		CLK = 1'b0;
		CLK = #9000 1'b1;
		# 9000;
	end
	CLK = 1'b0;
	CLK = #9000 1'b1;
end 

// SWITCH
initial
begin
	SWITCH = 1'b0;
end 

// RESET
initial
begin
	RESET = 1'b0;
end 
endmodule

